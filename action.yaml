name: pre-commit autoupdate skip repos
description: Allow skipping repos when invoking pre-commit autoupdate.
author: thecesrom
branding:
  color: green
  icon: command
inputs:
  cache:
    description: >-
      Whether to enable caching.
    required: false
    default: 'yes'
  committer-email:
    description: >-
      Email address used for setting up Git identity.
    required: false
    default: '146358438+coatl-bot@users.noreply.github.com'
  committer-name:
    description: >-
      Name used for setting up Git identity.
    required: false
    default: 'coatl-bot'
  config:
    description: >-
      Path to pre-commit config file.
    required: false
    default: '.pre-commit-config.yaml'
  gh-token:
    description: >-
      GitHub token.
    required: true
  pr-base-branch:
    description: >-
      The branch into which you want your code merged.
    required: false
    default: 'main'
  pr-branch:
    description: >-
      The branch that contains commits for your pull request.
    required: false
    default: 'coatl-dev-pre-commit-autoupdate'
  pr-create:
    description: >-
      Whether to create a Pull Request.
    required: false
    default: 'yes'
  pr-title:
    description: >-
      Title for the pull request.
    required: false
    default: 'build(deps): coatl-dev pre-commit autoupdate'
  skip-hooks:
    description: >-
      A comma separated list of hook ids which will be disabled.
    required: false
    default: ''
  skip-repos:
    description: >-
      A list of repos to exclude from autoupdate.
outputs:
  update-hit:
    description: >-
      Whether repos were updated in pre-commit config file.
    value: ${{ steps.git-diff.outputs.diff != '' }}

runs:
  using: composite
  steps:
    - name: Set up Python 3.11
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip
      if: ${{ inputs.cache == 'yes' }}
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: coatl-dev-pre-commit-${{ env.pythonLocation }}

    - name: Install pre-commit
      shell: bash
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade pre-commit

    - name: Cache pre-commit
      if: ${{ inputs.cache == 'yes' }}
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: coatl-dev-action-pre-commit-autoupdate-${{ env.pythonLocation }}-${{ hashFiles(inputs.config) }}

    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash

    - name: Update repos
      shell: bash
      run: |
        pre-commit-autoupdate.sh "${{ inputs.config }}" "${{ inputs.skip-repos }}"

    - name: Run pre-commit
      shell: bash
      env:
        SKIP: ${{ inputs.skip-hooks }}
      run: |
        pre-commit install
        pre-commit run --all-files

    - name: Detect changes
      id: git-diff
      shell: bash
      run: |
        git diff --quiet "${{ inputs.config }}" || echo "diff=true" >> "$GITHUB_OUTPUT"

    - name: Get updated repos
      if: ${{ steps.git-diff.outputs.diff == 'true' && inputs.pr-create == 'yes' }}
      id: updated
      shell: bash
      run: |
        repos=$(git diff "${{ inputs.config }}" | grep 'https://[a-zA-Z0-9./?=_%:-]*')
        echo "repos=$repos" >> "$GITHUB_OUTPUT""

    - name: Configure git
      if: ${{ steps.git-diff.outputs.diff == 'true' && inputs.pr-create == 'yes' }}
      shell: bash
      run: |
        git config --local user.email "${{ inputs.committer-email }}"
        git config --local user.name "${{ inputs.committer-name }}"

    - name: Commit changes
      if: ${{ steps.git-diff.outputs.diff == 'true' && inputs.pr-create == 'yes' }}
      shell: bash
      run: |
        git checkout -B "${{ inputs.pr-branch }}"
        git add "${{ inputs.config }}"
        git commit -m "${{ inputs.pr-title }}"

    - name: Push changes
      if: ${{ steps.git-diff.outputs.diff == 'true' && inputs.pr-create == 'yes' }}
      shell: bash
      run: |
        git push --force --set-upstream origin "${{ inputs.pr-branch }}"

    - name: Create Pull Request
      if: ${{ steps.git-diff.outputs.diff == 'true' && inputs.pr-create == 'yes' }}
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.gh-token }}
      run: |
        gh pr create \
          --title "${{ inputs.pr-title }}" \
          --base "${{ inputs.pr-base-branch }}" \
          --head "${{ inputs.pr-branch }}" \
          --body "
          updates:
          ${{ steps.updated.repos }}
          "
